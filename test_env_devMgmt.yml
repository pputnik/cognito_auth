AWSTemplateFormatVersion: '2010-09-09'
Description: |
  run serverless authentication using pages on S3 and Cognito
  (C) Alexander Lutchko 2018 :)
Parameters:
  # --
  Environment:
    Default: Production
    Type: String
    Description: >-
      Application environment for which this network is being created. e.g.
      Development/Production.
    AllowedValues:
      - Development
      - Staging
      - Testing
      - Integration
      - PreProduction
      - Production
  Region: 
    Description: Region to build in
    Type: String
    Default: us-east-1
    AllowedValues:
      - us-east-1
      - us-west-2
  S3website: 
    Description: URL to static website with login form
    Type: String
    Default: "http://static-authorization.s3-website-us-east-1.amazonaws.com"
# ---
Resources:
  CognitoUserPool:
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html
    Type: "AWS::Cognito::UserPool"
    Properties:
      AdminCreateUserConfig: 
        AllowAdminCreateUserOnly: true
        UnusedAccountValidityDays: 2
      AutoVerifiedAttributes: 
        - email 
      DeviceConfiguration: 
        ChallengeRequiredOnNewDevice: true
      #LambdaConfig: 
       # LambdaConfig
      MfaConfiguration: "OFF"
      Policies: 
        PasswordPolicy: 
          MinimumLength: 6
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: false
          RequireUppercase: false
      UserPoolName: !Sub 'upool_${AWS::StackName}'
      UserPoolTags: 
        Environment: !Ref Environment	
        project: b-o-l	
        subproject: test management	
  AuthRole:
    Type: "AWS::IAM::Role"
    DependsOn: CognitoIdPool
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Principal: 
              Federated: 
                - "cognito-identity.amazonaws.com"
            Action: "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                "cognito-identity.amazonaws.com:aud": !Ref CognitoIdPool
              "ForAnyValue:StringLike":
                "cognito-identity.amazonaws.com:amr": "authenticated"
      Path: /
      Policies:
        - PolicyName: AuthenticatedUserRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Resource: '*'
                Action:
                  - "mobileanalytics:PutEvents"
                  - "cognito-sync:*"
                  - "cognito-identity:*"

  AuthRoleIP:
    DependsOn: AuthRole
    Type: "AWS::IAM::InstanceProfile"
    Properties: 
      Path: "/"
      Roles: 
        - Ref: AuthRole 
  UnauthRole:
    Type: "AWS::IAM::Role"
    DependsOn: CognitoIdPool
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Principal: 
              Federated: 
                - "cognito-identity.amazonaws.com"
            Action: "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                "cognito-identity.amazonaws.com:aud": !Ref CognitoIdPool
              "ForAnyValue:StringLike":
                "cognito-identity.amazonaws.com:amr": "unauthenticated"
      Path: /
      Policies:
        - PolicyName: UnauthenticatedUserRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Resource: '*'
                Action:
                  - "mobileanalytics:PutEvents"
                  - "cognito-sync:*"
 
  UnauthRoleIP:
    DependsOn: UnauthRole
    Type: "AWS::IAM::InstanceProfile"
    Properties: 
      Path: "/"
      Roles: 
        - Ref: UnauthRole 
  CognitoUpClientCognito:
    #### https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html
    DependsOn: CognitoUserPool
    Type: "AWS::Cognito::UserPoolClient"
    Properties:
        ClientName: !Sub 'cognito_${AWS::StackName}'
        ExplicitAuthFlows: 
          - CUSTOM_AUTH_FLOW_ONLY
          - USER_PASSWORD_AUTH
        GenerateSecret: false
        UserPoolId: !Ref CognitoUserPool
  CognitoIdPool:
    #### https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html
    Type: "AWS::Cognito::IdentityPool"
    DependsOn: CognitoUserPool
    Properties:
      IdentityPoolName: 'idpool'
      AllowUnauthenticatedIdentities: true
      CognitoIdentityProviders: 
        ## https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypool-cognitoidentityprovider.html#cfn-cognito-identitypool-cognitoidentityprovider-clientid
        - ClientId: !Ref CognitoUpClientCognito
          # cognito-idp.us-east-2.amazonaws.com/us-east-2_123456789. 
          ProviderName: !Sub 'cognito-idp.${Region}.amazonaws.com/${CognitoUserPool}' 
          ServerSideTokenCheck: false
  CognitoIdPoolRoleAttachment:
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolroleattachment.html
    Type: "AWS::Cognito::IdentityPoolRoleAttachment"
    DependsOn: 
      - CognitoIdPool
      - AuthRole
      - UnauthRole
    Properties:
      IdentityPoolId: !Ref CognitoIdPool
      Roles: 
        authenticated: !GetAtt AuthRole.Arn
        unauthenticated: !GetAtt UnauthRole.Arn
  # --
 
# ---
Outputs:
  CognitoUserPool:
    Value: !Ref CognitoUserPool
    Description: CognitoUserPool
  CognitoUserPoolProviderURL:
    Value: !GetAtt CognitoUserPool.ProviderURL
    Description: CognitoUserPool.ProviderURL
  CognitoUpClientCognito:
    Value: !Ref CognitoUpClientCognito
    Description: CognitoUpClientCognito
